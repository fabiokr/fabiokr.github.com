<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fabio kreusch</title>
    <description>My personal page</description>
    <link>http://www.kreusch.com.br</link>
    <atom:link href="http://www.kreusch.com.br/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Ansible colored html output</title>
        <description>&lt;p&gt;If you run Ansible in some automated way, you might miss the colored output it gives you when you run it through a terminal. I like it because it helps me to quickly check what has been modified in the run. I couldn’t find anything that did what I wanted, and I didn’t want to mess with the default Ansible output too, so what I did was to build a simple parser that transforms the default output into an html full of colors.&lt;/p&gt;

&lt;p&gt;Because we use Ruby on the automation stack at &lt;a href=&quot;http://eng5.com&quot;&gt;Eng5.com&lt;/a&gt;, the script is in Ruby. To use it, just place both the ruby file and the erb together, and use it like &lt;code class=&quot;highlighter-rouge&quot;&gt;Ansible.new.parse(original_ansible_output)&lt;/code&gt;. You’ll get a string back with the html version.&lt;/p&gt;

&lt;p&gt;It is not a full featured colored output (it does not parse multi line errors for example), but it does the trick for most part.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/fabiokr/5c51f4e3c76d3fbaa3f2&quot;&gt;Ruby Script&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/fabiokr/6cd0da3797d47f701ad4&quot;&gt;HTML Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 11 Jun 2015 08:40:00 -0300</pubDate>
        <link>http://www.kreusch.com.br/blog/2015/06/11/ansible-colored-html-output</link>
        <guid isPermaLink="true">http://www.kreusch.com.br/blog/2015/06/11/ansible-colored-html-output</guid>
      </item>
    
      <item>
        <title>My Ubuntu Ansible setup</title>
        <description>&lt;p&gt;In my &lt;a href=&quot;/blog/2013/12/03/manage-a-development-machine-with-ansible/&quot;&gt;previous post&lt;/a&gt; I talked about on how to manage an Ubuntu development machine with &lt;a href=&quot;http://www.ansibleworks.com&quot;&gt;Ansible&lt;/a&gt;. For reference, this is the full playbook I’m currently using for myself: &lt;a href=&quot;https://github.com/fabiokr/ansible-ubuntu&quot;&gt;https://github.com/fabiokr/ansible-ubuntu&lt;/a&gt;. I’m releasing it under the MIT license, so please feel free to modify it to your own needs.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Mar 2014 19:58:00 -0300</pubDate>
        <link>http://www.kreusch.com.br/blog/2014/03/05/my-ubuntu-ansible-setup</link>
        <guid isPermaLink="true">http://www.kreusch.com.br/blog/2014/03/05/my-ubuntu-ansible-setup</guid>
      </item>
    
      <item>
        <title>Manage a development machine with Ansible</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.ansibleworks.com&quot;&gt;Ansible&lt;/a&gt; is an IT orchestration tool I’ve been playing with lately. Similar tools include &lt;a href=&quot;http://www.opscode.com/chef/&quot;&gt;Chef&lt;/a&gt; and &lt;a href=&quot;http://puppetlabs.com&quot;&gt;Puppet&lt;/a&gt;. Some cools things about Ansible is that it is open source, and you don’t need anything in your target machine (it just uses an ssh connection).&lt;/p&gt;

&lt;p&gt;In this quickstart, I’ll build an Ansible playbook to manage a personal Ubuntu desktop.&lt;/p&gt;

&lt;p&gt;First step is to install Ansible. For Ubuntu, a repository is available:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo add-apt-repository ppa:rquillo/ansible
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo apt-get install ansible&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Additional installation methods can be found in &lt;a href=&quot;http://ansibleworks.com/docs/intro_installation.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, we create a directory that will hold our playbook:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir my_playbook&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A playbook is the source of instructions that ansible will run when provisioning.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch playbook.yml&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ansible expects instructions in the &lt;code class=&quot;highlighter-rouge&quot;&gt;yml&lt;/code&gt; format. Lets populate our playbook with an initial content:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# the host in which the playbook will be run&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# in this example, we using a localhost, so this is needed&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# the target user Ansible will impersonate when provisioning&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;johndoe&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# this makes all tasks run with sudo by default&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# additional variables&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;vars&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;johndoe&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# roles are a way to group tasks; they will run in the sequence determined here&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;system&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The next step is to create an inventory file. This will hold a list of servers Ansible can run with:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch inventory&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;localhost   &lt;span class=&quot;nv&quot;&gt;ansible_connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;local&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, lets create our roles. For this example, the idea is to have a &lt;code class=&quot;highlighter-rouge&quot;&gt;system&lt;/code&gt; role that is responsible for setting up system libraries.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir roles
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir roles/system&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And our system main task:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch roles/system/main.yml&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And this is the content of our sytems task:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# This is a task. Basically, it needs a module command. In this example, it&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# also have a `name`, which will be displayed while running the task to give a&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# better description of the running task.&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# apt is our module. It installs debian packages. Here we are passing an&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# `` variable, which is the item from `with_items`&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pkg=&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# `with_items` will loop through a list and run the module passing each item&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# as ``&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;with_items&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# better shell&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;zsh&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# terminal multiplexer&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tmux&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# terminal editor&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;vim-gtk&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# shh&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssh&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ruby&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ruby dev headers&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby-dev&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ruby package manager&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rubygems&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# This is an example of how to gather information from the machine. We&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# run a command with the &quot;shell&quot; module and register the result into the&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# &quot;default_shell&quot; variable&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;zsh facts&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$SHELL&#39;&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_shell&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# changed when determines when will this task be considered changed when running&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ansible. In this case, we want it to always be false, as we are just&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# retrieving information.&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;changed_when&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;False&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;no&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Now, we want to set zsh as the default shell, unless it is already the default&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# one.&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;make zsh default&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;chsh -s /bin/zsh&lt;/span&gt; 
  &lt;span class=&quot;c1&quot;&gt;# This task will run only when the following is true. In here, we check the&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# value registered previously within the &quot;default_shell&quot; variable.&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_shell.stdout.find(&#39;/bin/zsh&#39;) == -1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, to run our playbook:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ansible-playbook -K -i inventory playbook.yml&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-K&lt;/code&gt; will ask for the machine sudo password. &lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; will pass the inventory file to use.&lt;/p&gt;

&lt;p&gt;For additional modules, look into the &lt;a href=&quot;http://www.ansibleworks.com/docs/modules.html&quot;&gt;Ansible modules documentation&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Dec 2013 21:11:00 -0200</pubDate>
        <link>http://www.kreusch.com.br/blog/2013/12/03/manage-a-development-machine-with-ansible</link>
        <guid isPermaLink="true">http://www.kreusch.com.br/blog/2013/12/03/manage-a-development-machine-with-ansible</guid>
      </item>
    
      <item>
        <title>Vagrant SSHFS plugin</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; supports NFS by default to mount host directories in the client machine. In some situations that won’t work well, so I developed an &lt;a href=&quot;https://github.com/fabiokr/vagrant-sshfs&quot;&gt;SSH file system&lt;/a&gt; plugin for it.&lt;/p&gt;

&lt;p&gt;Basically, you have to install it and configure the mounted folders:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant plugin install vagrant-sshfs&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;VagrantFile&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;config.sshfs.paths = { &quot;src&quot; =&amp;gt; &quot;mountpoint&quot; }&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That will mount the &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; folder in the virtual box into the &lt;code class=&quot;highlighter-rouge&quot;&gt;mountpoint&lt;/code&gt; folder in the host machine.&lt;/p&gt;

&lt;p&gt;More information is available in the plugin &lt;a href=&quot;https://github.com/fabiokr/vagrant-sshfs&quot;&gt;README&lt;/a&gt; file.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Dec 2013 20:50:00 -0200</pubDate>
        <link>http://www.kreusch.com.br/blog/2013/12/01/vagrant-sshfs</link>
        <guid isPermaLink="true">http://www.kreusch.com.br/blog/2013/12/01/vagrant-sshfs</guid>
      </item>
    
      <item>
        <title>Sublime Related Files plugin</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/fabiokr/sublime-related-files&quot;&gt;Sublime Related Files&lt;/a&gt; is a &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;SublimeText&lt;/a&gt; plugin that displays a list of related files for your currently opened file.&lt;/p&gt;

&lt;p&gt;For example, a source code file could be related to its unit test file.&lt;/p&gt;

&lt;p&gt;It comes precofigured for a &lt;a href=&quot;https://github.com/fabiokr/sublime-related-files/blob/master/RelatedFiles.sublime-settings&quot;&gt;Rails project&lt;/a&gt;, so it will display related test/spec files, views, controllers, helpers and routes, and you can easily add your own setup.&lt;/p&gt;

&lt;p&gt;You can easily install it through the &lt;a href=&quot;https://sublime.wbond.net/&quot;&gt;Sublime Package Manager&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.github.com/fabiokr/sublime-related-files/master/screenshots/list.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Dec 2013 20:33:00 -0200</pubDate>
        <link>http://www.kreusch.com.br/blog/2013/12/01/sublime-related-files</link>
        <guid isPermaLink="true">http://www.kreusch.com.br/blog/2013/12/01/sublime-related-files</guid>
      </item>
    
      <item>
        <title>Uninstall all gems in Ruby 2.0</title>
        <description>&lt;p&gt;Here is a command to uninstall all non default gems in Ruby 2.0:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gem list | cut -d&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt; -f1 | grep -v &lt;span class=&quot;s2&quot;&gt;&quot;test-unit&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;psych&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;minitest&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;io-console&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;rdoc&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bigdecimal&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;rake&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;json&quot;&lt;/span&gt;  | xargs gem uninstall -aIx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Wed, 20 Mar 2013 10:40:00 -0300</pubDate>
        <link>http://www.kreusch.com.br/blog/2013/03/20/uninstall-all-gems-in-ruby20</link>
        <guid isPermaLink="true">http://www.kreusch.com.br/blog/2013/03/20/uninstall-all-gems-in-ruby20</guid>
      </item>
    
      <item>
        <title>Record a screen cast to a gif file</title>
        <description>&lt;p&gt;Here is a simple shell script that converts a recorded ogv file to an animated gif, pretty useful for demonstrating small interactions. For recording an ogv, I’ve been using Record my Desktop on Ubuntu. You’ll also need mplayer, and imagemagick. Under Ubuntu/Debian, you can install those with this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;apt-get install imagemagick mplayer gtk-recordmydesktop&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And here is the shell script:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ogv_to_gif&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Export into images
&lt;/span&gt;
  mplayer -ao null &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; -vo jpeg:outdir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/tmp/ogv_to_gif

  &lt;span class=&quot;c&quot;&gt;# Convert images to animated gif
&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Converting images folder to gif...&quot;&lt;/span&gt;
  convert /tmp/ogv_to_gif/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; /tmp/ogv_to_gif.gif

  &lt;span class=&quot;c&quot;&gt;# Final filename
&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;original_filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;original_filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;//ogv/gif&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# Optimize gif
&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Optimizing generated gif...&quot;&lt;/span&gt;
  convert /tmp/ogv_to_gif.gif -fuzz 10% -layers Optimize &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# Cleans up tmp folders
&lt;/span&gt;
  rm -rf /tmp/ogv_to_gif.gif /tmp/ogv_to_gif
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Wed, 19 Sep 2012 15:08:00 -0300</pubDate>
        <link>http://www.kreusch.com.br/blog/2012/09/19/record-a-screen-cast-to-a-gif-file</link>
        <guid isPermaLink="true">http://www.kreusch.com.br/blog/2012/09/19/record-a-screen-cast-to-a-gif-file</guid>
      </item>
    
      <item>
        <title>Jquery silently fails on ajax errors</title>
        <description>&lt;p&gt;Context: you have an ajax call that returns javascript code. If that javascript raises a runtime error, it turns out that Jquery will engulf it and you will have a hard time finding out what is failling.&lt;/p&gt;

&lt;p&gt;This is what I came up with to force raising when that kind of thing happens:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffeescript&quot; data-lang=&quot;coffeescript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ajax:error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Code is in Coffeescript, by the way.&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Sep 2012 18:38:00 -0300</pubDate>
        <link>http://www.kreusch.com.br/blog/2012/09/12/jquery-silently-fails-on-ajax-errors</link>
        <guid isPermaLink="true">http://www.kreusch.com.br/blog/2012/09/12/jquery-silently-fails-on-ajax-errors</guid>
      </item>
    
      <item>
        <title>Guake autostart script with Rails</title>
        <description>&lt;p&gt;I use
&lt;a href=&quot;http://guake.org/&quot;&gt;Guake&lt;/a&gt; terminal in my development
&lt;a href=&quot;http://www.ubuntu.com&quot;&gt;Ubuntu&lt;/a&gt; machine, and most of the time I find myself repeating a ton of commands to start my Rails devlopment environment, each process under its own tab. So today I finally took some time to setup a simple script that sets up Guake the way I want it. By adding something like the following to your .bashrc file, you’ll be able to start it by running the “guake-my-project” command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;guake-my-project&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
	  guake --rename-tab&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Specs&lt;span class=&quot;s2&quot;&gt;&quot; --execute-command=&quot;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/path/to/project &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;guard&lt;span class=&quot;s2&quot;&gt;&quot; &amp;amp;&amp;amp;  
	  guake --new-tab=2 --rename-tab=&quot;&lt;/span&gt;Server&lt;span class=&quot;s2&quot;&gt;&quot; --execute-command=&quot;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/path/to/project &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rails s&lt;span class=&quot;s2&quot;&gt;&quot; &amp;amp;&amp;amp;  
	  guake --new-tab=3 --rename-tab=&quot;&lt;/span&gt;MyProject&lt;span class=&quot;s2&quot;&gt;&quot; --execute-command=&quot;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/path/to/project&lt;span class=&quot;s2&quot;&gt;&quot;;
	}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Thu, 05 Jul 2012 17:23:00 -0300</pubDate>
        <link>http://www.kreusch.com.br/blog/2012/07/05/guake-autostart-script-with-rails</link>
        <guid isPermaLink="true">http://www.kreusch.com.br/blog/2012/07/05/guake-autostart-script-with-rails</guid>
      </item>
    
      <item>
        <title>Notifying delayed_job failures by default</title>
        <description>&lt;p&gt;Here is a helpful code snippet to notify delayed_job errors by default in a Rails application. In a config/initializers file, add the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Optional but recommended for less future surprises.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Fail at startup if method does not exist instead of in background job &lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Airbrake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:notify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NoMethodError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;undefined method `&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&#39; for &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;respond_to?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Chain delayed job&#39;s handle_failed_job method to do exception notification&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Delayed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Worker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class_eval&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle_failed_job_with_notification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle_failed_job_without_notification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# only actually send mail in production&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;production?&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# rescue if ExceptionNotifier fails for some reason&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Airbrake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;notify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Airbrake failed: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;backtrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;  &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;flush&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;

&lt;span class=&quot;err&quot;&gt; &lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alias_method_chain&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:handle_failed_job&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:notification&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this example, Airbrake is being used for error notification, but this can be easily changed to the desired notification method.&lt;/p&gt;

&lt;p&gt;Credits to this thread: 
&lt;a href=&quot;http://stackoverflow.com/questions/5972903/how-to-make-exceptionnotifier-work-with-delayed-job-in-rails-3&quot;&gt;http://stackoverflow.com/questions/5972903/how-to-make-exceptionnotifier-work-with-delayed-job-in-rails-3&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Jan 2012 12:35:00 -0200</pubDate>
        <link>http://www.kreusch.com.br/blog/2012/01/13/notifying-delayed-job-failures-by-default</link>
        <guid isPermaLink="true">http://www.kreusch.com.br/blog/2012/01/13/notifying-delayed-job-failures-by-default</guid>
      </item>
    
  </channel>
</rss>
